#Reborg's world
def turn_right():
    turn_left()
    turn_left()
    turn_left()
n = 0
for i in range(1,7):
    n = i
    move()
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()

#Draw square
turn_left()
move()
turn_right()
move()
turn_right()
move()
turn_right()
move()

#While loop
def turn_right():
    turn_left()
    turn_left()
    turn_left()
def jump():
    move()
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()
number_of_hurdles = 0
while number_of_hurdles < 6:
    number_of_hurdles += 1
    jump()

#Goal is random each time
def turn_right():
    turn_left()
    turn_left()
    turn_left()
def jump():
    move()
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()
number_of_hurdles = 0
while at_goal() != True:
    number_of_hurdles += 1
    print(number_of_hurdles)
    jump()

#Random Jump
def turn_right():
    turn_left()
    turn_left()
    turn_left()
def jump():
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()
while not at_goal():
    if wall_in_front():
        jump()
    else:
        move()
def turn_right():
    turn_left()
    turn_left()
    turn_left()
def jump():
    turn_left()
    while wall_on_right():
        turn_left()
        move()
    turn_right()
    move()
    turn_right()
    while front_is_clear():
        move()
    turn_left()
while not at_goal():
    if wall_in_front():
        jump()
    elif front_is_clear():
        move()


def turn_right():
    turn_left()
    turn_left()
    turn_left()      
while not at_goal():
    if right_is_clear():
        turn_right()
        move()
    elif front_is_clear():
        move()
    else:
        turn_left()
